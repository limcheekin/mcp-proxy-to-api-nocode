# pingora config example from https://github.com/cloudflare/pingora/blob/main/docs/user_guide/conf.md
pingora:
  version: 1
  threads: 2
  pid_file: /run/pingora.pid
  upgrade_sock: /tmp/pingora_upgrade.sock
  user: nobody
  group: mcpusers

access_point:
  # listener on TCP or TLS
  listeners:
    - address: 0.0.0.0:8080 # listen on all interfaces
mcps:
  - id: fabric # Service identifier
    upstream_id: 1 # Upstream service identifier (must be the same as upstream id in upstreams)
    path: /app/config/fabric/openapi.json # Local OpenAPI file path

# ************************************************************** 
# Remove the comments of the following MCP for testing
# **************************************************************
#  - id: jsonplaceholder # Service identifier
#    upstream_id: 9 # Upstream service identifier (must be the same as upstream id in upstreams)
#    path: /app/config/jsonplaceholder/swagger.json # Local OpenAPI file path
#    upstream: # Upstream service configuration must be defined
#      headers: # Headers to send to upstream service
#        X-API-Key: "12345-abcdef"        # API key
#        Authorization: "Bearer token123" # Bearer token
#        User-Agent: "MyApp/1.0"          # User agent
#        Accept: "application/json"       # Accept header

upstreams: # Upstream service configuration must be defined
  - id: 1
    headers: # Headers to send to upstream service
      X-API-Key: "your_fabric_key_here"        # API key
    nodes: #（e.g., a web server or API server)）
      "fabric:8080": 1 # address with weight
    type: roundrobin # Load balancing algorithm (roundrobin, random, ip_hash)

# ************************************************************** 
# Remove the comments of the following MCP for testing
# **************************************************************
#  - id: 9
#    headers: # Headers to send to upstream service
#      X-API-Key: "12345-abcdef"        # API key
#      Authorization: "Bearer token123" # Bearer token
#      User-Agent: "MyApp/1.0"          # User agent
#      Accept: "application/json"       # Accept header
#    nodes: #（e.g., a web server or API server)）
#      "jsonplaceholder.typicode.com": 1 # address with weight
#    type: roundrobin # Load balancing algorithm (roundrobin, random, ip_hash)
#    scheme: https # supports http and https
#    pass_host: rewrite # set to rewrite to upstream_host, when nodes are domains
#    upstream_host: jsonplaceholder.typicode.com # set to override host header

# Global rules apply plugins to all matching requests
# global_rules:
#   - id: 1
#     plugins:
#       file-logger: {} # log to file